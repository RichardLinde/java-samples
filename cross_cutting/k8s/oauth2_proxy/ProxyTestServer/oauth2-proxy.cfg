## OAuth2 Proxy Config File
## https://github.com/oauth2-proxy/oauth2-proxy

## <addr>:<port> to listen on for HTTP/HTTPS clients
http_address = "127.0.0.1:4180"
# https_address = ":443"

## Are we running behind a reverse proxy? Will not accept headers like X-Real-Ip unless this is set.

## TLS Settings
# tls_cert_file = ""
# tls_key_file = ""

## the OAuth Redirect URL.
# defaults to the "https://" + requested host header + "/oauth2/callback"
#redirect_url = "http://localhost:8090/callback"

redirect_url="http://localhost:4180/oauth2/callback"
auth_logging = true
## the http url(s) of the upstream endpoint. If multiple, routing is based on path
upstreams = [ "http://localhost:8090" ]
ssl_upstream_insecure_skip_verify=true

## Logging configuration
#logging_filename = ""
#logging_max_size = 100
#logging_max_age = 7
#logging_local_time = true
#logging_compress = false
#standard_logging = true
#standard_logging_format = "[{{.Timestamp}}] [{{.File}}] {{.Message}}"
#request_logging = true
#request_logging_format = "{{.Client}} - {{.Username}} [{{.Timestamp}}] {{.Host}} {{.RequestMethod}} {{.Upstream}} {{.RequestURI}} {{.Protocol}} {{.UserAgent}} {{.StatusCode}} {{.ResponseSize}} {{.RequestDuration}}"
#auth_logging = true
#auth_logging_format = "{{.Client}} - {{.Username}} [{{.Timestamp}}] [{{.Status}}] {{.Message}}"

## pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream
# pass_basic_auth = true
# pass_user_headers = true
## pass the request Host Header to upstream
## when disabled the upstream Host is used as the Host Header
# pass_host_header = true

## Email Domains to allow authentication for (this authorizes any email on this domain)
## for more granular authorization use `authenticated_emails_file`
## To authorize any email addresses use "*"
email_domains = [ "*" ]

metrics_address=":5555"
## The OAuth Client ID, Secret
provider="keycloak-oidc"
client_id = "oauth-proxy"
client_secret = "xGCg30I6J0JtbDDAqCY1C2EiLDzOpafS"
provider_display_name="My Keycloak"
#skip_provider_button=true
reverse_proxy=true
## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"
pass_access_token = true
pass_authorization_header=true

## Authenticated Email Addresses File (one email per line)
# authenticated_emails_file = ""

## Htpasswd File (optional)
## Additionally authenticate against a htpasswd file. Entries must be created with "htpasswd -B" for bcrypt encryption
## enabling exposes a username/login signin form
# htpasswd_file = ""

## bypass authentication for requests that match the method & path. Format: method=path_regex OR path_regex alone for all methods
skip_auth_routes = [
  "GET=^/probe",
  "^/metrics"
]

## mark paths as API routes to get HTTP Status code 401 instead of redirect to login page
#  api_routes = [
#    "^/api"
#  ]

## Templates
## optional directory with custom sign_in.html and error.html
# custom_templates_dir = ""

## skip SSL checking for HTTPS requests
ssl_insecure_skip_verify = true

cookie_name = "oauth2_proxy"
cookie_secret = "XWxWblIrMF8lPVMjM1JKUlhLKWtddV1OYU95YmIrQzU="
cookie_domains = "*"
cookie_expire = "168h"
cookie_refresh = "10h"
cookie_secure = false
#cookie_httponly = true
#scopes=["email", "profile", "groups"]
scope="openid email profile"
oidc_issuer_url = "http://localhost:5326/realms/TestRealm"
allowed_roles = ["admin"]
allowed_groups = ["*"]

